{"version":3,"sources":["components/Button/Button.jsx","components/Pagination/Pagination.jsx","components/PaginationSelect/PaginationSelect.jsx","App.jsx","index.js"],"names":["Button","innerText","action","type","className","onClick","Pagination","makePageCollection","pagesCollection","props","total","perPage","page","pagesAmount","Math","ceil","counter","push","length","onPreviousPage","onPageChange","onSelectPage","event","Number","target","onNextPage","this","prevClass","classNames","disabled","nextClass","currentPageItemRangeEnd","currentPageItemsRange","currentPageInfo","aria-label","map","currentPage","pageClass","active","key","uuidv4","React","Component","PaginationSelect","selectId","range","value","id","onChange","element","App","state","selectRange","setState","onPerPageChange","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.944ab95c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ innerText, action }) => (\n  <button\n    type=\"button\"\n    className=\"page-link\"\n    onClick={action}\n  >\n    {innerText}\n  </button>\n);\n\nButton.propTypes = {\n  innerText: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Pagination.css';\nimport { Button } from '../Button';\n\nexport class Pagination extends React.Component {\n  makePageCollection = () => {\n    const pagesCollection = [];\n    const { total, perPage, page } = this.props;\n    const pagesAmount = Math.ceil(total / perPage);\n    let counter = 1;\n\n    while (counter <= pagesAmount) {\n      if (counter === 1\n        || counter === page\n        || counter === page - 1\n        || counter === page + 1\n        || counter === pagesAmount) {\n        pagesCollection.push(counter);\n      } else if (pagesCollection[pagesCollection.length - 1] !== '...') {\n        pagesCollection.push('...');\n      }\n\n      counter += 1;\n    }\n\n    return pagesCollection;\n  }\n\n  onPreviousPage = () => {\n    const { page, onPageChange } = this.props;\n\n    if (page - 1 >= 0) {\n      onPageChange(page - 1);\n    }\n  }\n\n  onSelectPage = (event) => {\n    const {\n      onPageChange,\n    } = this.props;\n    const currentPage = Number(event.target.innerText);\n\n    onPageChange(currentPage);\n  }\n\n  onNextPage = () => {\n    const {\n      total,\n      perPage,\n      page,\n      onPageChange,\n    } = this.props;\n    const pagesAmount = Math.ceil(total / perPage);\n\n    if (page + 1 <= pagesAmount) {\n      onPageChange(page + 1);\n    }\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n    } = this.props;\n    const pagesCollection = this.makePageCollection();\n    const prevClass = classNames({\n      'page-item': true,\n      disabled: page === 1,\n    });\n    const nextClass = classNames({\n      'page-item': true,\n      disabled: page === pagesCollection[pagesCollection.length - 1],\n    });\n    const currentPageItemRangeStart = (page - 1) * perPage + 1;\n    const currentPageItemRangeEnd = (page - 1) * perPage + perPage > total\n      ? total\n      : (page - 1) * perPage + perPage;\n    const currentPageItemsRange = `${currentPageItemRangeStart}\n    - ${currentPageItemRangeEnd}`;\n    const currentPageInfo = `( ${currentPageItemsRange} of ${total} )`;\n\n    return (\n      <nav aria-label=\"Page navigation example\">\n        <p className=\"pages-info\">{currentPageInfo}</p>\n        <ul className=\"pagination\">\n          <li className={prevClass}>\n            <Button innerText=\"Previous\" action={this.onPreviousPage} />\n          </li>\n          {\n            pagesCollection.map((currentPage) => {\n              const pageClass = classNames({\n                'page-item': true,\n                active: currentPage === page,\n                disabled: currentPage === '...',\n              });\n\n              return (\n                <li key={uuidv4()} className={pageClass}>\n                  <Button innerText={currentPage} action={this.onSelectPage} />\n                </li>\n              );\n            })\n          }\n          <li className={nextClass}>\n            <Button innerText=\"Next\" action={this.onNextPage} />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const PaginationSelect = ({ selectId, range, value, action }) => (\n  <select\n    className=\"form-select\"\n    aria-label=\"Default select example\"\n    id={selectId}\n    onChange={action}\n    value={value}\n  >\n    {range.map(element => (\n      <option key={uuidv4()} value={element}>{element}</option>\n    ))}\n  </select>\n);\n\nPaginationSelect.propTypes = {\n  selectId: PropTypes.string.isRequired,\n  range: PropTypes.arrayOf(number).isRequired,\n  value: PropTypes.number.isRequired,\n  action: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { PaginationSelect } from './components/PaginationSelect';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n    selectRange: [1, 2, 3, 4, 5, 10, 15, 20, 30, 40],\n  };\n\n  onPageChange = (currentPage) => {\n    this.setState({ page: currentPage });\n  }\n\n  onPerPageChange = (event) => {\n    this.setState({\n      perPage: Number(event.target.value),\n      page: 1,\n    });\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n      selectRange,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          onPageChange={this.onPageChange}\n        />\n        <div className=\"input-group mb-3\">\n          <label\n            className=\"input-group-text\"\n            htmlFor=\"inputGroupSelect01\"\n          >\n            Choose amount of items per page\n          </label>\n          <PaginationSelect\n            selectId=\"inputGroupSelect01\"\n            range={selectRange}\n            value={perPage}\n            action={this.onPerPageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}